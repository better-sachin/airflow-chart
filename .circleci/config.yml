version: 2.1

workflows:
  version: 2.1
  install-airflow-chart:
    jobs:
      - lint
      - unittest-charts
      - build-artifact-dev:
          requires:
          - lint
          - unittest-charts

      - release-internal:
          requires:
          - build-artifact-dev

      - airflow-test:
          matrix:
            parameters:
              # https://hub.docker.com/r/kindest/node/tags
              kube_version: ["1.14.10", "1.15.12", "1.16.15", "1.17.11", "1.18.8"]
              executor: ["CeleryExecutor", "LocalExecutor", "KubernetesExecutor"]
          requires:
          - build-artifact-dev

      - approve-release-prod:
          type: approval
          requires:
            - 'airflow-test'
          filters:
            branches:
              only:
                - '/(release-[0-9]+\.[0-9]+|1997-push-to-internal-helm)/'

      - build-artifact-prod:
          requires:
            - approve-release-prod

      - release-prod:
          requires:
            - build-artifact-prod
          filters:
            branches:
              only:
                - '/(release-[0-9]+\.[0-9]+|1997-push-to-internal-helm)/'
jobs:
  lint:
    docker:
      - image: alpine/helm:3.2.4
    steps:
      - checkout
      - run:
          name: Lint the Airflow chart
          command: bin/lint

  unittest-charts:
    docker:
      - image: alpine/helm:3.2.4
        entrypoint: /bin/sh
    steps:
      - checkout
      - run:
          name: unittest the Airflow chart
          command: |
            apk add git bash
            helm repo add stable https://kubernetes-charts.storage.googleapis.com
            helm dep update
            helm plugin install https://github.com/astronomer/helm-unittest/
            cp files/pod-template-file.yaml templates
            helm unittest .

  build-artifact-dev:
    docker:
      - image: alpine/helm:3.2.4
    steps:
      - checkout
      - run:
          name: Package the Airflow chart
          command: |
            apk add bash
            bin/package
      - persist_to_workspace:
          root: /tmp/airflow-chart-package
          paths:
            - './*.tgz'

  build-artifact-prod:
    docker:
      - image: alpine/helm:3.2.4
    environment:
      PROD_BUILD: "true"
    steps:
      - checkout
      - run:
          name: Package the Airflow chart
          command: |
            apk add bash
            bin/package
      - persist_to_workspace:
          root: /tmp/airflow-chart-package
          paths:
            - './*.tgz'

  airflow-test:
    machine:
      image: ubuntu-2004:202008-01
      resource_class: large
    parameters:
      executor:
        type: string
        default: "LocalExecutor"
      kube_version:
        type: string
        default: "1.18.8"
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run:
          name: Install Airflow chart
          command: |
            pyenv global 3.8.5
            export KUBE_VERSION=<< parameters.kube_version >>
            export EXECUTOR=<< parameters.executor >>
            HELM_CHART_PATH=$(find /tmp/workspace/ -name 'airflow-*.tgz')
            export HELM_CHART_PATH
            bin/run-ci

  release-internal:
    docker:
      - image: ubuntu:latest
    steps:
      - run:
          name: Install ca-certificates
          command: apt-get update && apt-get install -y ca-certificates curl python-is-python3 git sudo
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run:
          name: Release the Airflow chart to internal
          command: |
            set -e
            HELM_CHART_PATH=$(find /tmp/workspace/ -name 'airflow-*.tgz')
            export HELM_CHART_PATH
            bin/release

  release-prod:
    docker:
      - image: ubuntu:latest
    steps:
      - run:
          name: Install ca-certificates
          command: apt-get update && apt-get install -y ca-certificates curl python-is-python3 git sudo
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - publish-github-release
      - run:
          name: Release the Airflow chart to public
          command: |
            set -e
            HELM_CHART_PATH=$(find /tmp/workspace/ -name 'airflow-*.tgz')
            export HELM_CHART_PATH
            bin/release

commands:
  publish-github-release:
    description: "Create a release on GitHub"
    parameters:
      tag:
        type: string
        default:  "$NEXT_TAG"
    steps:
      - run:
          name: Create a release on GitHub
          command: |
            set -xe
            pyenv global 3.8.5
            pip install astronomer_e2e_test
            # We can remove --debug after we are happy with it
            astronomer-ci --debug publish-github-release --github-repository $CIRCLE_PROJECT_REPONAME --github-organization $CIRCLE_PROJECT_USERNAME --commitish $CIRCLE_SHA1
